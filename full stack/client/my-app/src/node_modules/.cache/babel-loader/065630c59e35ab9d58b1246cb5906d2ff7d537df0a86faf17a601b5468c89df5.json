{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\windows\\\\Desktop\\\\full stack\\\\client\\\\my-app\\\\src\\\\pages\\\\CityLocations.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/CityLocations.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport Ajmer from '../images/ajmerFort.webp';\nimport Meenakshi from '../images/meenakshiTemple.avif';\nimport Ellora from '../images/elloraCaves.avif';\nimport RajaSeat from '../images/rajaSeat.avif';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CityLocations = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [monuments, setMonuments] = useState([]);\n  useEffect(() => {\n    fetchMonuments();\n  }, []);\n  const fetchMonuments = async () => {\n    try {\n      await axios.get('http://localhost:6001/fetch-monuments').then(res => {\n        console.log(res.data);\n        const monus = res.data.filter(monu => monu.city === id);\n        setMonuments(monus);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CityLocations GenPagePadding\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Popular monuments in \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 34\n      }, this), \"...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), monuments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No monuments available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CityLocations__container\",\n      children: monuments.map(monu => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"city_location\",\n        onClick: () => navigate(`/location/${monu._id}`),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: monu.bannerImg,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: monu.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: monu.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }, this)]\n      }, monu._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(CityLocations, \"gxYvqQBc7gioN46vozD0PzsU3zo=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CityLocations;\nexport default CityLocations;\nvar _c;\n$RefreshReg$(_c, \"CityLocations\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useParams","Ajmer","Meenakshi","Ellora","RajaSeat","axios","jsxDEV","_jsxDEV","CityLocations","_s","id","navigate","monuments","setMonuments","fetchMonuments","get","then","res","console","log","data","monus","filter","monu","city","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","onClick","_id","src","bannerImg","alt","title","address","_c","$RefreshReg$"],"sources":["C:/Users/windows/Desktop/full stack/client/my-app/src/pages/CityLocations.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../styles/CityLocations.css'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport Ajmer from '../images/ajmerFort.webp'\r\nimport Meenakshi from '../images/meenakshiTemple.avif'\r\nimport Ellora from '../images/elloraCaves.avif'\r\nimport RajaSeat from '../images/rajaSeat.avif'\r\nimport axios from 'axios'\r\n\r\nconst CityLocations = () => {\r\n\r\n    const {id} = useParams();\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [monuments, setMonuments] = useState([]);\r\n\r\n    useEffect(() => {\r\n            \r\n        fetchMonuments();\r\n    \r\n     }, []);\r\n\r\n    const fetchMonuments = async () => {\r\n        try {\r\n          await axios.get('http://localhost:6001/fetch-monuments').then(\r\n            (res)=>{\r\n                console.log(res.data);\r\n                const monus = res.data.filter((monu) => monu.city === id);\r\n                setMonuments(monus);\r\n            }\r\n          )\r\n    \r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      }\r\n\r\n  return (\r\n    <div className='CityLocations GenPagePadding' >\r\n        <h3>Popular monuments in <span>{id}</span>...</h3>\r\n\r\n        {monuments.length === 0 ?\r\n            <p>No monuments available</p>\r\n        :\r\n            <div className='CityLocations__container'>\r\n                    {monuments.map((monu) => (\r\n                        <div className=\"city_location\" key={monu._id} onClick={()=> navigate(`/location/${monu._id}`)} >\r\n                            <img src={monu.bannerImg} alt=''/>\r\n                            <h4>{monu.title}</h4>\r\n                            <p>{monu.address}</p>\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        }\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CityLocations"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}